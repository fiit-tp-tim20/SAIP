# Generated by Django 4.1.3 on 2022-11-15 13:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Factory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employees", models.PositiveIntegerField(null=True)),
                ("capacity", models.PositiveIntegerField(null=True)),
                ("base_cost", models.FloatField(null=True)),
            ],
            options={
                "verbose_name_plural": "Factories",
                "db_table": "Factories",
            },
        ),
        migrations.CreateModel(
            name="Production",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("man_cost", models.FloatField(null=True)),
                ("sell_price", models.FloatField(null=True)),
                ("volume", models.PositiveIntegerField(null=True)),
            ],
            options={
                "db_table": "Productions",
            },
        ),
        migrations.CreateModel(
            name="Spending",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("r_d", models.FloatField(null=True)),
                ("marketing", models.FloatField(null=True)),
                ("factory", models.FloatField(null=True)),
                ("run_cost", models.FloatField(null=True)),
            ],
            options={
                "db_table": "Spendings",
            },
        ),
        migrations.CreateModel(
            name="Turn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.PositiveIntegerField(null=True)),
                ("start", models.DateTimeField(auto_now_add=True, null=True)),
                ("end", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Turns",
                "get_latest_by": "start",
            },
        ),
        migrations.CreateModel(
            name="Upgrade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cost", models.PositiveIntegerField(null=True)),
                ("effect", models.FloatField(null=True)),
                ("name", models.CharField(max_length=100, null=True)),
                ("camera_pos", models.CharField(max_length=100, null=True)),
                ("camera_rot", models.CharField(max_length=100, null=True)),
            ],
            options={
                "db_table": "Upgrades",
            },
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("market_size_diff", models.IntegerField(null=True)),
                ("run_cost_multiplier", models.FloatField(null=True)),
                (
                    "turn",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.turn",
                    ),
                ),
            ],
            options={
                "db_table": "Parameters",
            },
        ),
        migrations.CreateModel(
            name="MarketState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.PositiveIntegerField(null=True)),
                ("demand", models.PositiveIntegerField(null=True)),
                (
                    "turn",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.turn",
                    ),
                ),
            ],
            options={
                "db_table": "MarketStates",
            },
        ),
        migrations.CreateModel(
            name="EmailGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Emails",
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="user_companies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Companies",
                "db_table": "Companies",
            },
        ),
        migrations.CreateModel(
            name="CompaniesState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fan_base", models.PositiveIntegerField(blank=True, null=True)),
                ("balance", models.FloatField(blank=True, null=True)),
                ("stock_price", models.FloatField(blank=True, null=True)),
                ("inventory", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.company",
                    ),
                ),
                (
                    "factory",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.factory",
                    ),
                ),
                (
                    "production",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.production",
                    ),
                ),
                (
                    "spending",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.spending",
                    ),
                ),
                (
                    "turn",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.turn",
                    ),
                ),
            ],
            options={
                "db_table": "CompaniesStates",
            },
        ),
        migrations.CreateModel(
            name="Companies_Upgrades",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("s", "started"),
                            ("ns", "not started"),
                            ("f", "finished"),
                        ],
                        default="ns",
                        max_length=100,
                    ),
                ),
                ("upgrade", models.PositiveIntegerField(null=True)),
                ("progess", models.PositiveIntegerField(null=True)),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="saip_api.company",
                    ),
                ),
            ],
            options={
                "db_table": "Companies_Upgrades",
            },
        ),
    ]
