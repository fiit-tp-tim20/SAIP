import React, { useState } from "react";
import { useQuery } from "react-query";
import Slider from "../components/slider/Slider";
import Tutorial from "../components/modal/Tutorial";
import useCompanyStore from "../store/Company";
import { getCompanyStats } from "../api/GetCompanyStats";
import CompanyGraph from "../components/statisticsGraph/CompanyGraph";
import { getTurn } from "../api/GetTurn";
import getCompanyReport from "../api/GetCompanyReport";

function Company() {
	const token = localStorage.getItem("token");

	const { data: turn } = useQuery({
		queryKey: ["currentTurn"],
		queryFn: () => token && getTurn(),
	});

	const { isLoading: statsIsLoading, data: statsData } = useQuery(["getCompanyStats"], getCompanyStats);
	const { data: reportData } = useQuery(["companyReport", turn], () => getCompanyReport(turn.Number - 1));

	const {
		productCount,
		productCountChecked,
		productPrice,
		productPriceChecked,
		capitalInvestments,
		capitalInvestmentsChecked,
		setProductCount,
		setProductCountChecked,
		setProductPrice,
		setProductPriceChecked,
		setCapitalInvestments,
		setCapitalInvestmentsChecked,
	} = useCompanyStore();

	// State for managing tutorial visibility
	const [isTutorialOpen, setTutorialOpen] = useState<boolean>(true);

	// State for managing tutorial visibility
	const [tutorialStates, setTutorialStates] = useState({
		production: false,
		price: false,
		invest: false,
	});

	const openTutorial = (tutorialKey: string) => {
		setTutorialStates((prevStates) => ({
			...prevStates,
			[tutorialKey]: true,
		}));
	};

	const closeTutorial = (tutorialKey: string) => {
		setTutorialStates((prevStates) => ({
			...prevStates,
			[tutorialKey]: false,
		}));
	};

	return (
		<div className="flex flex-col xl:w-[1280px] md:w-[900px] w-[600px]">
			<h1 className="my-4">≈†tatistiky</h1>
			<div className="background-container my-2 flex flex-col rounded-2xl p-6">
				{statsIsLoading ? (
					<div>Loading...</div>
				) : (
					<CompanyGraph manufactured={statsData?.manufactured} sold={statsData?.sold} />
				)}
			</div>
			<div className="flex flex-col">
				<h1 className="my-4">Rozdelenie financi√≠</h1>
				<div className="flex flex-col background-container p-6 rounded-2xl my-2">
					<div className="py-2 flex flex-row items-center justify-between">
						<h2>Poƒçet produkovan√Ωch kusov</h2>
						{/* Add a button to open the tutorial */}
						<button
							onClick={() => openTutorial("production")}
							className="button-light font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline"
						>
							üí°
						</button>
						{tutorialStates.production && (
							<Tutorial
								isOpen={tutorialStates.production}
								closeModal={() => closeTutorial("production")}
								textTitle="Tip"
								textContent={
									<div>
										Optim√°lny poƒçet produkovan√Ωch kusov do ƒèal≈°ieho obdobia je 90% maxim√°lnej v√Ωrobnej kapacity.
										<br/>
										<br/>
										= 0,9 * (hodnota tov√°rne / 500)
									</div>
								}
							/>
						)}
					</div>
					<p className="pt-1">
						Poƒçet produkovan√Ωch kusov je poƒçet kusov, ktor√© sa vyrobia v urƒçitom ƒçasovom obdob√≠.
					</p>
					<div className="py-2 flex flex-row items-center justify-between">
						<h3>Poƒçet kusov (ks)</h3>
						<div>
							<Slider
								min={1}
								max={reportData ? reportData.production.capacity : 1000}
								value={productCount}
								setValue={setProductCount}
								checked={productCountChecked}
								setChecked={setProductCountChecked}
								step={1}
								limitMin
								limitMax
							/>
						</div>
					</div>
				</div>
				<div className="flex flex-col background-container p-6 rounded-2xl my-2">
					<div className="py-2 flex flex-row items-center justify-between">
						<h2>Predajn√° cena</h2>
						{/* Add a button to open the tutorial */}
						<button
							onClick={() => openTutorial("price")}
							className="button-light font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline"
						>
							üí°
						</button>
						{tutorialStates.price && (
							<Tutorial
								isOpen={tutorialStates.price}
								closeModal={() => closeTutorial("price")}
								textTitle="Tip"
								textContent={
									<div>
										Maxim√°lna predajn√° cena je 15 000 ‚Ç¨.
									</div>
								}
							/>
						)}
					</div>
					<p className="pt-1">
						Predajn√° cena je cena, za ktor√∫ sa pred√°va produkt z√°kazn√≠kovi. Predajn√° cena je kƒæ√∫ƒçov√Ωm
						faktorom pri rozhodovan√≠ z√°kazn√≠ka o n√°kupe produktu a je d√¥le≈æitou s√∫ƒças≈•ou trhov√©ho
						rozhodovania pre pred√°vaj√∫ceho. M√¥≈æe by≈• ovplyvnen√° mnoh√Ωmi faktormi, ako je napr√≠klad
						konkurencia, trhov√° situ√°cia, n√°klady na marketing a reklamu. Predajn√° cena je d√¥le≈æit√Ωm
						faktorom pre z√°kazn√≠ka aj pre pred√°vaj√∫ceho, preto≈æe m√¥≈æe ma≈• v√Ωznamn√Ω vplyv na rozhodnutie o
						n√°kupe a na celkov√Ω √∫spech podnikania.
					</p>
					<div className="py-2 flex flex-row items-center justify-between">
						<h3>Predajn√° cena (‚Ç¨/ks)</h3>
						<div>
							<Slider
								min={0}
								max={15000}
								value={productPrice}
								setValue={setProductPrice}
								checked={productPriceChecked}
								setChecked={setProductPriceChecked}
								step={10}
							/>
						</div>
					</div>
				</div>
				<div className="flex flex-col background-container p-6 rounded-2xl my-2">
					<div className="py-2 flex flex-row items-center justify-between">
						<h2>Invest√≠cie do kapit√°lu</h2>
						{/* Add a button to open the tutorial */}
						<button
							onClick={() => openTutorial("invest")}
							className="button-light font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline"
						>
							üí°
						</button>
						{tutorialStates.invest && (
							<Tutorial
								isOpen={tutorialStates.invest}
								closeModal={() => closeTutorial("invest")}
								textTitle="Tip"
								textContent={
									<div>
										Aby neklesal kapit√°l, je potrebn√© minim√°lne investova≈• do kapit√°lu dan√∫ ƒçiastku<br/>
										<br/>
										= 0,0125 * hodnota tov√°rne
									</div>
								}
							/>
						)}
					</div>
					<p className="pt-1">
						Invest√≠cie do kapit√°lu s√∫ invest√≠cie do majetku, ktor√© sa pou≈æ√≠vaj√∫ na v√Ωrobu produktov. Je
						d√¥le≈æit√© vykona≈• d√¥kladn√∫ anal√Ωzu a zv√°≈æi≈• v≈°etky faktory, ako je napr√≠klad hist√≥ria podnikania,
						finanƒçn√° situ√°cia, a perspekt√≠va bud√∫ceho v√Ωvoja, pred rozhodnut√≠m investova≈• do kapit√°lu.
					</p>
					<div className="py-2 flex flex-row items-center justify-between">
						<h3>Invest√≠cia (‚Ç¨)</h3>
						<div>
							<Slider
								min={0}
								max={10000}
								value={capitalInvestments}
								setValue={setCapitalInvestments}
								checked={capitalInvestmentsChecked}
								setChecked={setCapitalInvestmentsChecked}
								step={10}
							/>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
}

export default Company;
